{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aiden\\\\Desktop\\\\weatherapp\\\\src\\\\TempChart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatHourlyTime = timestamp => {\n  const options = {\n    hour: 'numeric',\n    hour12: true\n  };\n  return new Intl.DateTimeFormat('en-US', options).format(new Date(timestamp * 1000));\n};\nconst kelvinToCelsius = kelvin => kelvin - 273.15;\nconst TempChart = ({\n  currentTemperature,\n  forecastedTemperatures,\n  forecastedTimes\n}) => {\n  const labels = ['Now', ...forecastedTimes.map(time => formatHourlyTime(time))];\n  const temperaturesInCelsius = [kelvinToCelsius(currentTemperature), ...forecastedTemperatures.map(temp => kelvinToCelsius(temp))];\n  const chartData = {\n    labels: labels,\n    datasets: [{\n      label: 'Temperature',\n      data: temperaturesInCelsius,\n      borderColor: 'rgba(75, 192, 192, 1)',\n      fill: true,\n      backgroundColor: 'rgba(76, 137, 201, 0.8)'\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'category',\n        labels: labels\n      },\n      y: {\n        // ... other y-axis configurations\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_c = TempChart;\nexport default TempChart;\nvar _c;\n$RefreshReg$(_c, \"TempChart\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","formatHourlyTime","timestamp","options","hour","hour12","Intl","DateTimeFormat","format","Date","kelvinToCelsius","kelvin","TempChart","currentTemperature","forecastedTemperatures","forecastedTimes","labels","map","time","temperaturesInCelsius","temp","chartData","datasets","label","data","borderColor","fill","backgroundColor","scales","x","type","y","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Aiden/Desktop/weatherapp/src/TempChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto'\r\n\r\nconst formatHourlyTime = (timestamp) => {\r\n    const options = { hour: 'numeric', hour12: true };\r\n    return new Intl.DateTimeFormat('en-US', options).format(new Date(timestamp * 1000));\r\n};\r\n\r\nconst kelvinToCelsius = (kelvin) => kelvin - 273.15;\r\n\r\n\r\n\r\nconst TempChart = ({ currentTemperature, forecastedTemperatures, forecastedTimes }) => {\r\n    const labels = ['Now', ...forecastedTimes.map(time => formatHourlyTime(time))];\r\n    const temperaturesInCelsius = [kelvinToCelsius(currentTemperature), ...forecastedTemperatures.map(temp => kelvinToCelsius(temp))];\r\n    \r\n    const chartData = {\r\n        labels: labels,\r\n        datasets: [\r\n        {\r\n            label: 'Temperature',\r\n            data: temperaturesInCelsius,\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            fill: true,\r\n            backgroundColor: 'rgba(76, 137, 201, 0.8)',\r\n        },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n          x: {\r\n            type: 'category',\r\n            labels: labels,\r\n          },\r\n          y: {\r\n            // ... other y-axis configurations\r\n          },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <Line data={chartData} options={options}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TempChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;EACpC,MAAMC,OAAO,GAAG;IAAEC,IAAI,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAK,CAAC;EACjD,OAAO,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEJ,OAAO,CAAC,CAACK,MAAM,CAAC,IAAIC,IAAI,CAACP,SAAS,GAAG,IAAI,CAAC,CAAC;AACvF,CAAC;AAED,MAAMQ,eAAe,GAAIC,MAAM,IAAKA,MAAM,GAAG,MAAM;AAInD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,kBAAkB;EAAEC,sBAAsB;EAAEC;AAAgB,CAAC,KAAK;EACnF,MAAMC,MAAM,GAAG,CAAC,KAAK,EAAE,GAAGD,eAAe,CAACE,GAAG,CAACC,IAAI,IAAIjB,gBAAgB,CAACiB,IAAI,CAAC,CAAC,CAAC;EAC9E,MAAMC,qBAAqB,GAAG,CAACT,eAAe,CAACG,kBAAkB,CAAC,EAAE,GAAGC,sBAAsB,CAACG,GAAG,CAACG,IAAI,IAAIV,eAAe,CAACU,IAAI,CAAC,CAAC,CAAC;EAEjI,MAAMC,SAAS,GAAG;IACdL,MAAM,EAAEA,MAAM;IACdM,QAAQ,EAAE,CACV;MACIC,KAAK,EAAE,aAAa;MACpBC,IAAI,EAAEL,qBAAqB;MAC3BM,WAAW,EAAE,uBAAuB;MACpCC,IAAI,EAAE,IAAI;MACVC,eAAe,EAAE;IACrB,CAAC;EAEL,CAAC;EAED,MAAMxB,OAAO,GAAG;IACZyB,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,UAAU;QAChBd,MAAM,EAAEA;MACV,CAAC;MACDe,CAAC,EAAE;QACD;MAAA;IAEJ;EACJ,CAAC;EAED,oBACI/B,OAAA;IAAAgC,QAAA,eACAhC,OAAA,CAACF,IAAI;MAAC0B,IAAI,EAAEH,SAAU;MAAClB,OAAO,EAAEA;IAAQ;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEd,CAAC;AAACC,EAAA,GAlCIzB,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}