{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aiden\\\\Desktop\\\\weatherapp\\\\src\\\\TempChart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatHourlyTime = (timestamp, timezone) => {\n  const options = {\n    hour: 'numeric',\n    hour12: true,\n    timeZone: timezone\n  };\n  return new Intl.DateTimeFormat('en-US', options).format(new Date(timestamp * 1000));\n};\nconst kelvinToCelsius = kelvin => kelvin - 273.15;\nconst TempChart = ({\n  currentTemperature,\n  forecastedTemperatures,\n  forecastedTimes,\n  timezone\n}) => {\n  const labels = ['Now', ...forecastedTimes.map(time => formatHourlyTime(time, timezone))];\n  const temperaturesInCelsius = [kelvinToCelsius(currentTemperature), ...forecastedTemperatures.map(temp => kelvinToCelsius(temp))];\n  const chartData = {\n    labels: labels,\n    datasets: [{\n      label: 'Temperature',\n      data: temperaturesInCelsius,\n      borderColor: 'rgba(75, 192, 192, 1)',\n      fill: {\n        value: -1\n      },\n      backgroundColor: 'rgba(76, 137, 201, 0.8)'\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'category',\n        labels: labels\n      },\n      y: {\n        // ... other y-axis configurations\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_c = TempChart;\nexport default TempChart;\nvar _c;\n$RefreshReg$(_c, \"TempChart\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","formatHourlyTime","timestamp","timezone","options","hour","hour12","timeZone","Intl","DateTimeFormat","format","Date","kelvinToCelsius","kelvin","TempChart","currentTemperature","forecastedTemperatures","forecastedTimes","labels","map","time","temperaturesInCelsius","temp","chartData","datasets","label","data","borderColor","fill","value","backgroundColor","scales","x","type","y","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Aiden/Desktop/weatherapp/src/TempChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto'\r\n\r\nconst formatHourlyTime = (timestamp, timezone) => {\r\n    const options = { hour: 'numeric', hour12: true , timeZone: timezone};\r\n    return new Intl.DateTimeFormat('en-US', options).format(new Date(timestamp * 1000));\r\n};\r\n\r\nconst kelvinToCelsius = (kelvin) => kelvin - 273.15;\r\n\r\n\r\n\r\nconst TempChart = ({ currentTemperature, forecastedTemperatures, forecastedTimes, timezone }) => {\r\n    const labels = ['Now', ...forecastedTimes.map(time => formatHourlyTime(time, timezone))];\r\n    const temperaturesInCelsius = [kelvinToCelsius(currentTemperature), ...forecastedTemperatures.map(temp => kelvinToCelsius(temp))];\r\n    \r\n    const chartData = {\r\n        labels: labels,\r\n        datasets: [\r\n        {\r\n            label: 'Temperature',\r\n            data: temperaturesInCelsius,\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            fill: {value: -1},\r\n            backgroundColor: 'rgba(76, 137, 201, 0.8)',\r\n        },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n          x: {\r\n            type: 'category',\r\n            labels: labels,\r\n          },\r\n          y: {\r\n            // ... other y-axis configurations\r\n          },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <Line data={chartData} options={options}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TempChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,gBAAgB,GAAGA,CAACC,SAAS,EAAEC,QAAQ,KAAK;EAC9C,MAAMC,OAAO,GAAG;IAAEC,IAAI,EAAE,SAAS;IAAEC,MAAM,EAAE,IAAI;IAAGC,QAAQ,EAAEJ;EAAQ,CAAC;EACrE,OAAO,IAAIK,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEL,OAAO,CAAC,CAACM,MAAM,CAAC,IAAIC,IAAI,CAACT,SAAS,GAAG,IAAI,CAAC,CAAC;AACvF,CAAC;AAED,MAAMU,eAAe,GAAIC,MAAM,IAAKA,MAAM,GAAG,MAAM;AAInD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,kBAAkB;EAAEC,sBAAsB;EAAEC,eAAe;EAAEd;AAAS,CAAC,KAAK;EAC7F,MAAMe,MAAM,GAAG,CAAC,KAAK,EAAE,GAAGD,eAAe,CAACE,GAAG,CAACC,IAAI,IAAInB,gBAAgB,CAACmB,IAAI,EAAEjB,QAAQ,CAAC,CAAC,CAAC;EACxF,MAAMkB,qBAAqB,GAAG,CAACT,eAAe,CAACG,kBAAkB,CAAC,EAAE,GAAGC,sBAAsB,CAACG,GAAG,CAACG,IAAI,IAAIV,eAAe,CAACU,IAAI,CAAC,CAAC,CAAC;EAEjI,MAAMC,SAAS,GAAG;IACdL,MAAM,EAAEA,MAAM;IACdM,QAAQ,EAAE,CACV;MACIC,KAAK,EAAE,aAAa;MACpBC,IAAI,EAAEL,qBAAqB;MAC3BM,WAAW,EAAE,uBAAuB;MACpCC,IAAI,EAAE;QAACC,KAAK,EAAE,CAAC;MAAC,CAAC;MACjBC,eAAe,EAAE;IACrB,CAAC;EAEL,CAAC;EAED,MAAM1B,OAAO,GAAG;IACZ2B,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,UAAU;QAChBf,MAAM,EAAEA;MACV,CAAC;MACDgB,CAAC,EAAE;QACD;MAAA;IAEJ;EACJ,CAAC;EAED,oBACIlC,OAAA;IAAAmC,QAAA,eACAnC,OAAA,CAACF,IAAI;MAAC4B,IAAI,EAAEH,SAAU;MAACnB,OAAO,EAAEA;IAAQ;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEd,CAAC;AAACC,EAAA,GAlCI1B,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}