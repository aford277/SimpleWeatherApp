{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aiden\\\\Desktop\\\\weatherapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState('');\n  const [country, setCountry] = useState('');\n  const [stateCode, setStateCode] = useState('');\n  // const stateCode = \"NY\";\n  const [weatherData, setWeatherData] = useState(null);\n  const [locationData, setLocationData] = useState(null);\n  const apiKey = '1a67ab44359d61742560aa00d59baf0b';\n  // const locationApiUrl = `http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=${apiKey}`;\n\n  const countries = [{\n    code: 'CA',\n    name: 'Canada'\n  }, {\n    code: 'US',\n    name: 'United States'\n  }\n  // Add more countries as needed\n  ];\n  const usStates = [{\n    code: 'AL',\n    name: 'Alabama'\n  }, {\n    code: 'AK',\n    name: 'Alaska'\n  }, {\n    code: 'AZ',\n    name: 'Arizona'\n  }, {\n    code: 'AR',\n    name: 'Arkansas'\n  }, {\n    code: 'CA',\n    name: 'California'\n  }, {\n    code: 'CO',\n    name: 'Colorado'\n  }, {\n    code: 'CT',\n    name: 'Connecticut'\n  }, {\n    code: 'DE',\n    name: 'Delaware'\n  }, {\n    code: 'FL',\n    name: 'Florida'\n  }, {\n    code: 'GA',\n    name: 'Georgia'\n  }, {\n    code: 'HI',\n    name: 'Hawaii'\n  }, {\n    code: 'ID',\n    name: 'Idaho'\n  }, {\n    code: 'IL',\n    name: 'Illinois'\n  }, {\n    code: 'IN',\n    name: 'Indiana'\n  }, {\n    code: 'IA',\n    name: 'Iowa'\n  }, {\n    code: 'KS',\n    name: 'Kansas'\n  }, {\n    code: 'KY',\n    name: 'Kentucky'\n  }, {\n    code: 'LA',\n    name: 'Louisiana'\n  }, {\n    code: 'ME',\n    name: 'Maine'\n  }, {\n    code: 'MD',\n    name: 'Maryland'\n  }, {\n    code: 'MA',\n    name: 'Massachusetts'\n  }, {\n    code: 'MI',\n    name: 'Michigan'\n  }, {\n    code: 'MN',\n    name: 'Minnesota'\n  }, {\n    code: 'MS',\n    name: 'Mississippi'\n  }, {\n    code: 'MO',\n    name: 'Missouri'\n  }, {\n    code: 'MT',\n    name: 'Montana'\n  }, {\n    code: 'NE',\n    name: 'Nebraska'\n  }, {\n    code: 'NV',\n    name: 'Nevada'\n  }, {\n    code: 'NH',\n    name: 'New Hampshire'\n  }, {\n    code: 'NJ',\n    name: 'New Jersey'\n  }, {\n    code: 'NM',\n    name: 'New Mexico'\n  }, {\n    code: 'NY',\n    name: 'New York'\n  }, {\n    code: 'NC',\n    name: 'North Carolina'\n  }, {\n    code: 'ND',\n    name: 'North Dakota'\n  }, {\n    code: 'OH',\n    name: 'Ohio'\n  }, {\n    code: 'OK',\n    name: 'Oklahoma'\n  }, {\n    code: 'OR',\n    name: 'Oregon'\n  }, {\n    code: 'PA',\n    name: 'Pennsylvania'\n  }, {\n    code: 'RI',\n    name: 'Rhode Island'\n  }, {\n    code: 'SC',\n    name: 'South Carolina'\n  }, {\n    code: 'SD',\n    name: 'South Dakota'\n  }, {\n    code: 'TN',\n    name: 'Tennessee'\n  }, {\n    code: 'TX',\n    name: 'Texas'\n  }, {\n    code: 'UT',\n    name: 'Utah'\n  }, {\n    code: 'VT',\n    name: 'Vermont'\n  }, {\n    code: 'VA',\n    name: 'Virginia'\n  }, {\n    code: 'WA',\n    name: 'Washington'\n  }, {\n    code: 'WV',\n    name: 'West Virginia'\n  }, {\n    code: 'WI',\n    name: 'Wisconsin'\n  }, {\n    code: 'WY',\n    name: 'Wyoming'\n  }];\n  const getWeatherData = async () => {\n    try {\n      const locationApiUrl = country === 'US' ? `http://api.openweathermap.org/geo/1.0/direct?q=${city},${stateCode},${country}&limit=1&appid=${apiKey}` : `http://api.openweathermap.org/geo/1.0/direct?q=${city},${country}&limit=1&appid=${apiKey}`;\n      const locationResponse = await fetch(locationApiUrl);\n      const locationData = await locationResponse.json();\n      setLocationData(locationData);\n      const weatherApiUrl = `https://api.openweathermap.org/data/3.0/onecall?lat=${locationData && locationData.length > 0 ? locationData[0].lat : ''}&lon=${locationData && locationData.length > 0 ? locationData[0].lon : ''}&appid=${apiKey}`;\n      const weatherResponse = await fetch(weatherApiUrl);\n      const weatherData = await weatherResponse.json();\n      setWeatherData(weatherData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n\n      // Check if the error is due to a specific condition (e.g., place not found)\n      if (error.message.includes('undefined')) {\n        // Handle the specific error condition\n        alert('Location not found. Please check the entered place and try again.');\n      } else {\n        // For other types of errors, provide a generic error message\n        alert('An error occurred while fetching location data. Please try again later.');\n      }\n    }\n  };\n  const handleCountryChange = e => {\n    const selectedCountry = e.target.value;\n    setCountry(selectedCountry);\n\n    // If the selected country is the United States, set an empty state code\n    if (selectedCountry === 'US') {\n      setStateCode('');\n    }\n  };\n  const handleStateChange = e => {\n    const selectedStateCode = e.target.value;\n    setStateCode(selectedStateCode);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    getWeatherData();\n  };\n  const kelvinToCelsius = kelvin => kelvin - 273.15;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter city name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: city,\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select country:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: country,\n          onChange: handleCountryChange,\n          children: countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: country.code,\n            children: country.name\n          }, country.code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), country === 'US' && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select state:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: stateCode,\n          onChange: handleStateChange,\n          children: usStates.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: state.code,\n            children: state.name\n          }, state.code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), weatherData && weatherData.current && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", kelvinToCelsius(weatherData.current.temp).toFixed(2), \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Feels Like: \", kelvinToCelsius(weatherData.current.feels_like).toFixed(2), \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weatherData.current.humidity ? `${weatherData.current.humidity}%` : 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Weather: \", weatherData.current.weather && weatherData.current.weather[0] ? weatherData.current.weather[0].description : 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }, this), locationData && locationData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Location Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Latitude: \", locationData[0].lat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Longitude: \", locationData[0].lon]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"HJNJV+6zcUSsStENPlTyBZ15Xn0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","city","setCity","country","setCountry","stateCode","setStateCode","weatherData","setWeatherData","locationData","setLocationData","apiKey","countries","code","name","usStates","getWeatherData","locationApiUrl","locationResponse","fetch","json","weatherApiUrl","length","lat","lon","weatherResponse","error","console","message","includes","alert","handleCountryChange","e","selectedCountry","target","value","handleStateChange","selectedStateCode","handleSubmit","preventDefault","kelvinToCelsius","kelvin","className","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","state","current","temp","toFixed","feels_like","humidity","weather","description","_c","$RefreshReg$"],"sources":["C:/Users/Aiden/Desktop/weatherapp/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    const [city, setCity] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [stateCode, setStateCode] = useState('');\r\n    // const stateCode = \"NY\";\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [locationData, setLocationData] = useState(null);\r\n\r\n\r\n    const apiKey = '1a67ab44359d61742560aa00d59baf0b';\r\n    // const locationApiUrl = `http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=${apiKey}`;\r\n\r\n    const countries = [\r\n        { code: 'CA', name: 'Canada' },\r\n        { code: 'US', name: 'United States' }\r\n        // Add more countries as needed\r\n    ];\r\n\r\n    const usStates = [\r\n        { code: 'AL', name: 'Alabama' },\r\n        { code: 'AK', name: 'Alaska' },\r\n        { code: 'AZ', name: 'Arizona' },\r\n        { code: 'AR', name: 'Arkansas' },\r\n        { code: 'CA', name: 'California' },\r\n        { code: 'CO', name: 'Colorado' },\r\n        { code: 'CT', name: 'Connecticut' },\r\n        { code: 'DE', name: 'Delaware' },\r\n        { code: 'FL', name: 'Florida' },\r\n        { code: 'GA', name: 'Georgia' },\r\n        { code: 'HI', name: 'Hawaii' },\r\n        { code: 'ID', name: 'Idaho' },\r\n        { code: 'IL', name: 'Illinois' },\r\n        { code: 'IN', name: 'Indiana' },\r\n        { code: 'IA', name: 'Iowa' },\r\n        { code: 'KS', name: 'Kansas' },\r\n        { code: 'KY', name: 'Kentucky' },\r\n        { code: 'LA', name: 'Louisiana' },\r\n        { code: 'ME', name: 'Maine' },\r\n        { code: 'MD', name: 'Maryland' },\r\n        { code: 'MA', name: 'Massachusetts' },\r\n        { code: 'MI', name: 'Michigan' },\r\n        { code: 'MN', name: 'Minnesota' },\r\n        { code: 'MS', name: 'Mississippi' },\r\n        { code: 'MO', name: 'Missouri' },\r\n        { code: 'MT', name: 'Montana' },\r\n        { code: 'NE', name: 'Nebraska' },\r\n        { code: 'NV', name: 'Nevada' },\r\n        { code: 'NH', name: 'New Hampshire' },\r\n        { code: 'NJ', name: 'New Jersey' },\r\n        { code: 'NM', name: 'New Mexico' },\r\n        { code: 'NY', name: 'New York' },\r\n        { code: 'NC', name: 'North Carolina' },\r\n        { code: 'ND', name: 'North Dakota' },\r\n        { code: 'OH', name: 'Ohio' },\r\n        { code: 'OK', name: 'Oklahoma' },\r\n        { code: 'OR', name: 'Oregon' },\r\n        { code: 'PA', name: 'Pennsylvania' },\r\n        { code: 'RI', name: 'Rhode Island' },\r\n        { code: 'SC', name: 'South Carolina' },\r\n        { code: 'SD', name: 'South Dakota' },\r\n        { code: 'TN', name: 'Tennessee' },\r\n        { code: 'TX', name: 'Texas' },\r\n        { code: 'UT', name: 'Utah' },\r\n        { code: 'VT', name: 'Vermont' },\r\n        { code: 'VA', name: 'Virginia' },\r\n        { code: 'WA', name: 'Washington' },\r\n        { code: 'WV', name: 'West Virginia' },\r\n        { code: 'WI', name: 'Wisconsin' },\r\n        { code: 'WY', name: 'Wyoming' },\r\n    ];\r\n\r\n    const getWeatherData = async () => {\r\n        try {\r\n            const locationApiUrl = country === 'US'\r\n                ? `http://api.openweathermap.org/geo/1.0/direct?q=${city},${stateCode},${country}&limit=1&appid=${apiKey}`\r\n                : `http://api.openweathermap.org/geo/1.0/direct?q=${city},${country}&limit=1&appid=${apiKey}`;\r\n            const locationResponse = await fetch(locationApiUrl);\r\n            const locationData = await locationResponse.json();\r\n\r\n            setLocationData(locationData);\r\n\r\n            const weatherApiUrl = `https://api.openweathermap.org/data/3.0/onecall?lat=${locationData && locationData.length > 0 ? locationData[0].lat : ''}&lon=${locationData && locationData.length > 0 ? locationData[0].lon : ''}&appid=${apiKey}`;\r\n\r\n            const weatherResponse = await fetch(weatherApiUrl);\r\n            const weatherData = await weatherResponse.json();\r\n\r\n            setWeatherData(weatherData);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n\r\n            // Check if the error is due to a specific condition (e.g., place not found)\r\n            if (error.message.includes('undefined')) {\r\n                // Handle the specific error condition\r\n                alert('Location not found. Please check the entered place and try again.');\r\n            } else {\r\n                // For other types of errors, provide a generic error message\r\n                alert('An error occurred while fetching location data. Please try again later.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCountryChange = (e) => {\r\n        const selectedCountry = e.target.value;\r\n        setCountry(selectedCountry);\r\n\r\n        // If the selected country is the United States, set an empty state code\r\n        if (selectedCountry === 'US') {\r\n            setStateCode('');\r\n        }\r\n    };\r\n\r\n    const handleStateChange = (e) => {\r\n        const selectedStateCode = e.target.value;\r\n        setStateCode(selectedStateCode);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        getWeatherData();\r\n    };\r\n\r\n    const kelvinToCelsius = (kelvin) => kelvin - 273.15;\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Enter city name:\r\n                    <input type=\"text\" value={city} onChange={(e) => setCity(e.target.value)} />\r\n                </label>\r\n                <label>\r\n                    Select country:\r\n                    <select value={country} onChange={handleCountryChange}>\r\n                        {countries.map((country) => (\r\n                            <option key={country.code} value={country.code}>\r\n                                {country.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </label>\r\n\r\n                {country === 'US' && (\r\n                    <label>\r\n                        Select state:\r\n                        <select value={stateCode} onChange={handleStateChange}>\r\n                            {usStates.map((state) => (\r\n                                <option key={state.code} value={state.code}>\r\n                                    {state.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </label>\r\n                )}          \r\n\r\n                <button type=\"submit\">Get Weather</button>\r\n            </form>\r\n\r\n            {weatherData && weatherData.current && (\r\n                <div>\r\n                    <h2>Current Weather</h2>\r\n                    <p>Temperature: {kelvinToCelsius(weatherData.current.temp).toFixed(2)} °C</p>\r\n                    <p>Feels Like: {kelvinToCelsius(weatherData.current.feels_like).toFixed(2)} °C</p>\r\n                    <p>Humidity: {weatherData.current.humidity ? `${weatherData.current.humidity}%` : 'N/A'}</p>\r\n                    <p>Weather: {weatherData.current.weather && weatherData.current.weather[0] ? weatherData.current.weather[0].description : 'N/A'}</p>\r\n                </div>\r\n            )}\r\n\r\n            {locationData && locationData.length > 0 && (\r\n                <div>\r\n                    {/* Display location data here */}\r\n                    <h2>Location Details</h2>\r\n                    <p>Latitude: {locationData[0].lat}</p>\r\n                    <p>Longitude: {locationData[0].lon}</p>\r\n                    {/* Add more details as needed */}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C;EACA,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAGtD,MAAMe,MAAM,GAAG,kCAAkC;EACjD;;EAEA,MAAMC,SAAS,GAAG,CACd;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC9B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAgB;EACpC;EAAA,CACH;EAED,MAAMC,QAAQ,GAAG,CACb;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC/B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC9B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC/B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAW,CAAC,EAChC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAa,CAAC,EAClC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAW,CAAC,EAChC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAc,CAAC,EACnC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAW,CAAC,EAChC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC/B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC/B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC9B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAC7B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAW,CAAC,EAChC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC/B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAO,CAAC,EAC5B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC9B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAW,CAAC,EAChC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAY,CAAC,EACjC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAC7B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAW,CAAC,EAChC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAgB,CAAC,EACrC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAW,CAAC,EAChC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAY,CAAC,EACjC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAc,CAAC,EACnC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAW,CAAC,EAChC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC/B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAW,CAAC,EAChC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC9B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAgB,CAAC,EACrC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAa,CAAC,EAClC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAa,CAAC,EAClC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAW,CAAC,EAChC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAiB,CAAC,EACtC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAe,CAAC,EACpC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAO,CAAC,EAC5B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAW,CAAC,EAChC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC9B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAe,CAAC,EACpC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAe,CAAC,EACpC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAiB,CAAC,EACtC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAe,CAAC,EACpC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAY,CAAC,EACjC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAC7B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAO,CAAC,EAC5B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC/B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAW,CAAC,EAChC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAa,CAAC,EAClC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAgB,CAAC,EACrC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAY,CAAC,EACjC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU,CAAC,CAClC;EAED,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,cAAc,GAAGd,OAAO,KAAK,IAAI,GAChC,kDAAiDF,IAAK,IAAGI,SAAU,IAAGF,OAAQ,kBAAiBQ,MAAO,EAAC,GACvG,kDAAiDV,IAAK,IAAGE,OAAQ,kBAAiBQ,MAAO,EAAC;MACjG,MAAMO,gBAAgB,GAAG,MAAMC,KAAK,CAACF,cAAc,CAAC;MACpD,MAAMR,YAAY,GAAG,MAAMS,gBAAgB,CAACE,IAAI,CAAC,CAAC;MAElDV,eAAe,CAACD,YAAY,CAAC;MAE7B,MAAMY,aAAa,GAAI,uDAAsDZ,YAAY,IAAIA,YAAY,CAACa,MAAM,GAAG,CAAC,GAAGb,YAAY,CAAC,CAAC,CAAC,CAACc,GAAG,GAAG,EAAG,QAAOd,YAAY,IAAIA,YAAY,CAACa,MAAM,GAAG,CAAC,GAAGb,YAAY,CAAC,CAAC,CAAC,CAACe,GAAG,GAAG,EAAG,UAASb,MAAO,EAAC;MAE3O,MAAMc,eAAe,GAAG,MAAMN,KAAK,CAACE,aAAa,CAAC;MAClD,MAAMd,WAAW,GAAG,MAAMkB,eAAe,CAACL,IAAI,CAAC,CAAC;MAEhDZ,cAAc,CAACD,WAAW,CAAC;IAC/B,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;;MAE5C;MACA,IAAIA,KAAK,CAACE,OAAO,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;QACrC;QACAC,KAAK,CAAC,mEAAmE,CAAC;MAC9E,CAAC,MAAM;QACH;QACAA,KAAK,CAAC,yEAAyE,CAAC;MACpF;IACJ;EACJ,CAAC;EAED,MAAMC,mBAAmB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,eAAe,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IACtC/B,UAAU,CAAC6B,eAAe,CAAC;;IAE3B;IACA,IAAIA,eAAe,KAAK,IAAI,EAAE;MAC1B3B,YAAY,CAAC,EAAE,CAAC;IACpB;EACJ,CAAC;EAED,MAAM8B,iBAAiB,GAAIJ,CAAC,IAAK;IAC7B,MAAMK,iBAAiB,GAAGL,CAAC,CAACE,MAAM,CAACC,KAAK;IACxC7B,YAAY,CAAC+B,iBAAiB,CAAC;EACnC,CAAC;EAED,MAAMC,YAAY,GAAIN,CAAC,IAAK;IACxBA,CAAC,CAACO,cAAc,CAAC,CAAC;IAClBvB,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,MAAMwB,eAAe,GAAIC,MAAM,IAAKA,MAAM,GAAG,MAAM;EAEnD,oBACI3C,OAAA;IAAK4C,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChB7C,OAAA;MAAM8C,QAAQ,EAAEN,YAAa;MAAAK,QAAA,gBACzB7C,OAAA;QAAA6C,QAAA,GAAO,kBAEH,eAAA7C,OAAA;UAAO+C,IAAI,EAAC,MAAM;UAACV,KAAK,EAAElC,IAAK;UAAC6C,QAAQ,EAAGd,CAAC,IAAK9B,OAAO,CAAC8B,CAAC,CAACE,MAAM,CAACC,KAAK;QAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC,eACRpD,OAAA;QAAA6C,QAAA,GAAO,iBAEH,eAAA7C,OAAA;UAAQqC,KAAK,EAAEhC,OAAQ;UAAC2C,QAAQ,EAAEf,mBAAoB;UAAAY,QAAA,EACjD/B,SAAS,CAACuC,GAAG,CAAEhD,OAAO,iBACnBL,OAAA;YAA2BqC,KAAK,EAAEhC,OAAO,CAACU,IAAK;YAAA8B,QAAA,EAC1CxC,OAAO,CAACW;UAAI,GADJX,OAAO,CAACU,IAAI;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEjB,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAEP/C,OAAO,KAAK,IAAI,iBACbL,OAAA;QAAA6C,QAAA,GAAO,eAEH,eAAA7C,OAAA;UAAQqC,KAAK,EAAE9B,SAAU;UAACyC,QAAQ,EAAEV,iBAAkB;UAAAO,QAAA,EACjD5B,QAAQ,CAACoC,GAAG,CAAEC,KAAK,iBAChBtD,OAAA;YAAyBqC,KAAK,EAAEiB,KAAK,CAACvC,IAAK;YAAA8B,QAAA,EACtCS,KAAK,CAACtC;UAAI,GADFsC,KAAK,CAACvC,IAAI;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEf,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACV,eAEDpD,OAAA;QAAQ+C,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EAEN3C,WAAW,IAAIA,WAAW,CAAC8C,OAAO,iBAC/BvD,OAAA;MAAA6C,QAAA,gBACI7C,OAAA;QAAA6C,QAAA,EAAI;MAAe;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBpD,OAAA;QAAA6C,QAAA,GAAG,eAAa,EAACH,eAAe,CAACjC,WAAW,CAAC8C,OAAO,CAACC,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,QAAG;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7EpD,OAAA;QAAA6C,QAAA,GAAG,cAAY,EAACH,eAAe,CAACjC,WAAW,CAAC8C,OAAO,CAACG,UAAU,CAAC,CAACD,OAAO,CAAC,CAAC,CAAC,EAAC,QAAG;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClFpD,OAAA;QAAA6C,QAAA,GAAG,YAAU,EAACpC,WAAW,CAAC8C,OAAO,CAACI,QAAQ,GAAI,GAAElD,WAAW,CAAC8C,OAAO,CAACI,QAAS,GAAE,GAAG,KAAK;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5FpD,OAAA;QAAA6C,QAAA,GAAG,WAAS,EAACpC,WAAW,CAAC8C,OAAO,CAACK,OAAO,IAAInD,WAAW,CAAC8C,OAAO,CAACK,OAAO,CAAC,CAAC,CAAC,GAAGnD,WAAW,CAAC8C,OAAO,CAACK,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW,GAAG,KAAK;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnI,CACR,EAEAzC,YAAY,IAAIA,YAAY,CAACa,MAAM,GAAG,CAAC,iBACpCxB,OAAA;MAAA6C,QAAA,gBAEI7C,OAAA;QAAA6C,QAAA,EAAI;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBpD,OAAA;QAAA6C,QAAA,GAAG,YAAU,EAAClC,YAAY,CAAC,CAAC,CAAC,CAACc,GAAG;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtCpD,OAAA;QAAA6C,QAAA,GAAG,aAAW,EAAClC,YAAY,CAAC,CAAC,CAAC,CAACe,GAAG;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEtC,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAClD,EAAA,CAlLQD,GAAG;AAAA6D,EAAA,GAAH7D,GAAG;AAoLZ,eAAeA,GAAG;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}