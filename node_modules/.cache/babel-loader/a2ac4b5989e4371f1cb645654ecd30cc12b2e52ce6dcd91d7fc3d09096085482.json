{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aiden\\\\Desktop\\\\weatherapp\\\\src\\\\TempChart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatHourlyTime = timestamp => {\n  const options = {\n    hour: 'numeric',\n    hour12: true\n  };\n  return new Intl.DateTimeFormat('en-US', options).format(new Date(timestamp * 1000));\n};\nconst kelvinToCelsius = kelvin => kelvin - 273.15;\nconst createGradient = temperatures => {\n  const gradient = temperatures.map(temp => {\n    const normalizedTemp = (temp + 30) / 60; // Normalize temperature to a range between 0 and 1\n    const red = Math.floor(255 * normalizedTemp);\n    const blue = Math.floor(255 * (1 - normalizedTemp));\n    return `rgba(${red}, 0, ${blue}, 0.5)`;\n  });\n  return gradient;\n};\nconst TempChart = ({\n  currentTemperature,\n  forecastedTemperatures,\n  forecastedTimes\n}) => {\n  const labels = ['Now', ...forecastedTimes.map(time => formatHourlyTime(time))];\n  const temperaturesInCelsius = [kelvinToCelsius(currentTemperature), ...forecastedTemperatures.map(temp => kelvinToCelsius(temp))];\n  const chartData = {\n    labels: labels,\n    datasets: [{\n      label: 'Temperature',\n      data: temperaturesInCelsius,\n      borderColor: 'rgba(75, 192, 192, 1)',\n      fill: true,\n      backgroundColor: createGradient(temperaturesInCelsius)\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'category',\n        labels: labels\n      },\n      y: {\n        // ... other y-axis configurations\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_c = TempChart;\nexport default TempChart;\nvar _c;\n$RefreshReg$(_c, \"TempChart\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","formatHourlyTime","timestamp","options","hour","hour12","Intl","DateTimeFormat","format","Date","kelvinToCelsius","kelvin","createGradient","temperatures","gradient","map","temp","normalizedTemp","red","Math","floor","blue","TempChart","currentTemperature","forecastedTemperatures","forecastedTimes","labels","time","temperaturesInCelsius","chartData","datasets","label","data","borderColor","fill","backgroundColor","scales","x","type","y","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Aiden/Desktop/weatherapp/src/TempChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto'\r\n\r\nconst formatHourlyTime = (timestamp) => {\r\n    const options = { hour: 'numeric', hour12: true };\r\n    return new Intl.DateTimeFormat('en-US', options).format(new Date(timestamp * 1000));\r\n};\r\n\r\nconst kelvinToCelsius = (kelvin) => kelvin - 273.15;\r\n\r\nconst createGradient = (temperatures) => {\r\n    const gradient = temperatures.map((temp) => {\r\n        const normalizedTemp = (temp + 30) / 60; // Normalize temperature to a range between 0 and 1\r\n        const red = Math.floor(255 * normalizedTemp);\r\n        const blue = Math.floor(255 * (1 - normalizedTemp));\r\n        return `rgba(${red}, 0, ${blue}, 0.5)`;\r\n    });\r\n\r\n    return gradient;\r\n};\r\n\r\nconst TempChart = ({ currentTemperature, forecastedTemperatures, forecastedTimes }) => {\r\n    const labels = ['Now', ...forecastedTimes.map(time => formatHourlyTime(time))];\r\n    const temperaturesInCelsius = [kelvinToCelsius(currentTemperature), ...forecastedTemperatures.map(temp => kelvinToCelsius(temp))];\r\n    \r\n    const chartData = {\r\n        labels: labels,\r\n        datasets: [\r\n        {\r\n            label: 'Temperature',\r\n            data: temperaturesInCelsius,\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            fill: true,\r\n            backgroundColor: createGradient(temperaturesInCelsius),\r\n        },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n          x: {\r\n            type: 'category',\r\n            labels: labels,\r\n          },\r\n          y: {\r\n            // ... other y-axis configurations\r\n          },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <Line data={chartData} options={options}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TempChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;EACpC,MAAMC,OAAO,GAAG;IAAEC,IAAI,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAK,CAAC;EACjD,OAAO,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEJ,OAAO,CAAC,CAACK,MAAM,CAAC,IAAIC,IAAI,CAACP,SAAS,GAAG,IAAI,CAAC,CAAC;AACvF,CAAC;AAED,MAAMQ,eAAe,GAAIC,MAAM,IAAKA,MAAM,GAAG,MAAM;AAEnD,MAAMC,cAAc,GAAIC,YAAY,IAAK;EACrC,MAAMC,QAAQ,GAAGD,YAAY,CAACE,GAAG,CAAEC,IAAI,IAAK;IACxC,MAAMC,cAAc,GAAG,CAACD,IAAI,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;IACzC,MAAME,GAAG,GAAGC,IAAI,CAACC,KAAK,CAAC,GAAG,GAAGH,cAAc,CAAC;IAC5C,MAAMI,IAAI,GAAGF,IAAI,CAACC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAGH,cAAc,CAAC,CAAC;IACnD,OAAQ,QAAOC,GAAI,QAAOG,IAAK,QAAO;EAC1C,CAAC,CAAC;EAEF,OAAOP,QAAQ;AACnB,CAAC;AAED,MAAMQ,SAAS,GAAGA,CAAC;EAAEC,kBAAkB;EAAEC,sBAAsB;EAAEC;AAAgB,CAAC,KAAK;EACnF,MAAMC,MAAM,GAAG,CAAC,KAAK,EAAE,GAAGD,eAAe,CAACV,GAAG,CAACY,IAAI,IAAI1B,gBAAgB,CAAC0B,IAAI,CAAC,CAAC,CAAC;EAC9E,MAAMC,qBAAqB,GAAG,CAAClB,eAAe,CAACa,kBAAkB,CAAC,EAAE,GAAGC,sBAAsB,CAACT,GAAG,CAACC,IAAI,IAAIN,eAAe,CAACM,IAAI,CAAC,CAAC,CAAC;EAEjI,MAAMa,SAAS,GAAG;IACdH,MAAM,EAAEA,MAAM;IACdI,QAAQ,EAAE,CACV;MACIC,KAAK,EAAE,aAAa;MACpBC,IAAI,EAAEJ,qBAAqB;MAC3BK,WAAW,EAAE,uBAAuB;MACpCC,IAAI,EAAE,IAAI;MACVC,eAAe,EAAEvB,cAAc,CAACgB,qBAAqB;IACzD,CAAC;EAEL,CAAC;EAED,MAAMzB,OAAO,GAAG;IACZiC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,UAAU;QAChBZ,MAAM,EAAEA;MACV,CAAC;MACDa,CAAC,EAAE;QACD;MAAA;IAEJ;EACJ,CAAC;EAED,oBACIvC,OAAA;IAAAwC,QAAA,eACAxC,OAAA,CAACF,IAAI;MAACkC,IAAI,EAAEH,SAAU;MAAC1B,OAAO,EAAEA;IAAQ;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEd,CAAC;AAACC,EAAA,GAlCIvB,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}